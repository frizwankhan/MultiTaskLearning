
{'image_size': (512, 512), 'embed_dim': 96, 'decoder_depth': 2, 'decoder_n_head': [48, 24, 12, 6], 'decoder_window_size': [4, 4, 8, 8], 'project_path': '/raid/home/rizwank/courses/DLCV/Project', 'pascal_path': '/raid/home/rizwank/courses/DLCV/Project/PASCAL_MT', 'train_batch_size': 8, 'val_batch_size': 8, 'num_workers_data': 2, 'ignore_index': 255, 'epochs': 50, 'warmup_steps': 2000, 'val_interval': 1, 'save_interval': 500, 'resume_training': False, 'local_rank': 0, 'global_rank': 0, 'world_size': 2}
Traceback (most recent call last):
  File "main.py", line 58, in <module>
    trainer.train(config)
  File "/raid/home/rizwank/courses/DLCV/Project/train.py", line 103, in train
    val_loss = self.val_step()
  File "/raid/home/rizwank/courses/DLCV/Project/train.py", line 67, in val_step
    loss_dict = self.criterion(output, batch)
  File "/raid/home/rizwank/courses/DLCV/Project/env/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/raid/home/rizwank/courses/DLCV/Project/env/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/raid/home/rizwank/courses/DLCV/Project/losses/multitask_loss.py", line 14, in forward
    out = {task: self.loss_ft[task](pred[task], gt[task]) for task in self.tasks}
  File "/raid/home/rizwank/courses/DLCV/Project/losses/multitask_loss.py", line 14, in <dictcomp>
    out = {task: self.loss_ft[task](pred[task], gt[task]) for task in self.tasks}
  File "/raid/home/rizwank/courses/DLCV/Project/env/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1511, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/raid/home/rizwank/courses/DLCV/Project/env/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1520, in _call_impl
    return forward_call(*args, **kwargs)
  File "/raid/home/rizwank/courses/DLCV/Project/losses/loss_functions.py", line 68, in forward
    masked_label = torch.masked_select(label, mask)
KeyboardInterrupt